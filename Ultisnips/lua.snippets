global !p
linelen = 88
def floor(i):
	if int(i) == i:
		return int(i)
	elif i > 0:
		return int(i)
	elif i < 0:
		return int(i) - 1
def ceil(i):
	if int(i) == i:
		return int(i)
	elif i > 0:
		return int(i) + 1
	elif i < 0:
		return int(i)
endglobal


snippet fhead "Create function description." bw 
------------------------------------
-- [name]       : ${1:fname}
-- [func]       : ${2:func simple desc}
-- [param]      : ${3:all param desc}
-- [return]     : ${4:return desc}
------------------------------------$0
endsnippet

snippet fmodule "Create module description." bw 
------------------------------------
-- [module] : ${1:fname}
-- [create] : ${2:func simple desc}
-- [modify] : ${3:all param desc}

-- ${4:copyright}

-- Licensed under the MIT License (the "License"); 
------------------------------------$0
endsnippet

# ┏━━━━━━━━━┓
# ┃ comment ┃
# ┗━━━━━━━━━┛

snippet "cmt (.*)" "Comment with description." rbw
--[[ ${1:`!p snip.rv = match.group(1)`}
${VISUAL}
]]$0
endsnippet

snippet line "Comment Using Line" bw
--`!p snip.rv = '-' * floor((linelen - 8 - len(t[1])) / 2)`\ ${1} /`!p snip.rv = '-' * ceil((linelen - 8 - len(t[1])) / 2)`--
$0
endsnippet

snippet map "mapping" bw
\{'${1:mod}', '${2:keys}', '${3:contents}'\},$0
endsnippet

# ┏━━━━━━━━━━┓
# ┃ function ┃
# ┗━━━━━━━━━━┛

snippet tfun "Create table function." bw 
function ${1:table_name}.${2:func_name}(${3:...})
	${4:--context}
end
$0
endsnippet

snippet sfun "Create table function with self." bw 
function ${1:table_name}:${2:func_name}(${3:...})
	${4:--context}
end
$0
endsnippet
